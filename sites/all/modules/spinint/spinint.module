<?php

/**
 * @file
 * Provide a scrolling number widget for integers.
 *
 * SpinInt provides a simple number scroller for integer numbers with an up
 * arrow and a down arrow. If a max or min value is set on the field then the
 * spinner will respect these. If both max and min are set the spinner with
 * cycle through numbers if clicked past a limit.
 */

/**
 * Implements hook_field_widget_info().
 */
function spinint_field_widget_info() {
  return array(
    'spinint' => array(
      'label' => t('Spinning integer'),
      'field types' => array('number_integer'),
      'settings' => array('min' => 1, 'sp_inc' => 1),
      'behaviors' => array(
        'multiple values' => FIELD_BEHAVIOR_DEFAULT,
        'default value' => FIELD_BEHAVIOR_DEFAULT,
      ),
    ),
  );
}

function spinint_field_widget_settings_form($field, $instance) {
  $widget = $instance['widget'];
  $form = array();
  if ($widget['type'] == 'spinint') {
    $form['sp_inc'] = array(
      '#type' => 'textfield',
      '#title' => t('Increment'),
      '#size' => 5,
      '#default_value' => $widget['settings']['sp_inc'],
      '#weight'=>100,
    );
    return $form;
  }
}

/**
 * Implements hook_field_widget_form().
 */
function spinint_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  if ($instance['widget']['type'] == 'spinint') {
    $form_state['no_cache'] = TRUE;
    if (isset($items[$delta]['value'])) {
      $value = $items[$delta]['value'];
    }
    elseif (isset($instance['default_value'][$delta])) {
      $value = $instance['default_value'][$delta];
    }
    else {
      $value = 1;
    }

    $markup = theme('spinint', array('instance' => $instance, 'value' => $value));
    $el = $element + array(
      '#type' => 'hidden',
      '#prefix' => $markup,
      '#default_value' => $value,
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'spinint') . '/js/spinint.js',
        ),
        'css' => array(
          drupal_get_path('module', 'spinint') . '/css/spinint.css',
        ),
      ),
    );

    $instance['settings']['sp_inc'] = $instance['widget']['settings']['sp_inc'];

    $el['#attached']['js'][] = array(
      'data' => array('spinint' => $instance['settings']),
      'type' => 'setting',
    );
    $el['#sp_inc']=$instance['widget']['settings']['sp_inc'];
    $element['value'] = $el;
  }
  drupal_alter('spinint', $element, $instance, $field);
  return $element;
}

/**
 * Implements hook_theme().
 */
function spinint_theme() {
  return array(
    'spinint' => array(
      'template' => 'templates/spinint',
      'variables' => array(
        'instance' => NULL,
        'value' => NULL,
      ),
    ),
  );
}
